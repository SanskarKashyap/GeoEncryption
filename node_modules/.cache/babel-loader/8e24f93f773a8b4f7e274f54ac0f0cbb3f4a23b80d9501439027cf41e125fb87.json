{"ast":null,"code":"// LocationVerifier.js\n\nimport axios from 'axios';\nconst fileService = require('../Database/databaseService');\nexport const verifyLocation = async primaryKey => {\n  try {\n    // Fetch the location associated with the primary key from your server\n    const fileLocation = await fileService.getLocation(primaryKey);\n\n    // If no file exists with this ID, send an alert\n    if (!fileLocation) {\n      alert('No file exists with this ID');\n      return false;\n    }\n\n    // Get the user's current location using the Google Maps API\n    // Note: You'll need to replace 'YOUR_API_KEY' with your actual API key\n    const {\n      data\n    } = await axios.get(`https://www.googleapis.com/geolocation/v1/geolocate?key=YOUR_API_KEY`);\n    const userLocation = data.location;\n\n    // Compare the user's location with the file location\n    // This is a simple example that checks if the locations are exactly the same\n    // You might want to allow for some variance in the locations depending on your requirements\n    if (userLocation.lat === fileLocation.lat && userLocation.lng === fileLocation.lng) {\n      return true;\n    } else {\n      return false;\n    }\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n};","map":{"version":3,"names":["axios","fileService","require","verifyLocation","primaryKey","fileLocation","getLocation","alert","data","get","userLocation","location","lat","lng","error","console"],"sources":["/home/natrajanforreal/Desktop/Github/GeoEncryption/src/components/HandleLocation/LocationVerifier.js"],"sourcesContent":["// LocationVerifier.js\n\nimport axios from 'axios';\nconst fileService = require('../Database/databaseService');\n\nexport const verifyLocation = async (primaryKey) => {\n  try {\n    // Fetch the location associated with the primary key from your server\n    const fileLocation = await fileService.getLocation(primaryKey);\n\n    // If no file exists with this ID, send an alert\n    if (!fileLocation) {\n      alert('No file exists with this ID');\n      return false;\n    }\n\n    // Get the user's current location using the Google Maps API\n    // Note: You'll need to replace 'YOUR_API_KEY' with your actual API key\n    const { data } = await axios.get(`https://www.googleapis.com/geolocation/v1/geolocate?key=YOUR_API_KEY`);\n    const userLocation = data.location;\n\n    // Compare the user's location with the file location\n    // This is a simple example that checks if the locations are exactly the same\n    // You might want to allow for some variance in the locations depending on your requirements\n    if (userLocation.lat === fileLocation.lat && userLocation.lng === fileLocation.lng) {\n      return true;\n    } else {\n      return false;\n    }\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n};\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,WAAW,GAAGC,OAAO,CAAC,6BAA6B,CAAC;AAE1D,OAAO,MAAMC,cAAc,GAAG,MAAOC,UAAU,IAAK;EAClD,IAAI;IACF;IACA,MAAMC,YAAY,GAAG,MAAMJ,WAAW,CAACK,WAAW,CAACF,UAAU,CAAC;;IAE9D;IACA,IAAI,CAACC,YAAY,EAAE;MACjBE,KAAK,CAAC,6BAA6B,CAAC;MACpC,OAAO,KAAK;IACd;;IAEA;IACA;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,sEAAqE,CAAC;IACxG,MAAMC,YAAY,GAAGF,IAAI,CAACG,QAAQ;;IAElC;IACA;IACA;IACA,IAAID,YAAY,CAACE,GAAG,KAAKP,YAAY,CAACO,GAAG,IAAIF,YAAY,CAACG,GAAG,KAAKR,YAAY,CAACQ,GAAG,EAAE;MAClF,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAO,KAAK;IACd;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,OAAO,KAAK;EACd;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}